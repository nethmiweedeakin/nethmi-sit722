name: CD - Deploy to AKS (Production)

on:
  workflow_dispatch:

jobs:
  deploy_backend:
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} \
            --name ${{ secrets.AKS_CLUSTER_NAME }} \
            --overwrite-existing

      - name: Create ACR secret (if not exists)
        run: |
          kubectl get secret acr-secret || \
          kubectl create secret docker-registry acr-secret \
            --docker-server=${{ secrets.AZURE_CONTAINER_REGISTRY }} \
            --docker-username=${{ secrets.AZURE_ACR_NAME }} \
            --docker-password=${{ secrets.AZURE_ACR_KEY }} \
            --docker-email=weeramann@gmail.com
          kubectl get secret acr-secret

      - name: Apply Kubernetes manifests and ensure latest image
        run: |
          # Apply all manifests
          kubectl apply -f k8s/

          # Force all deployments to use latest image
          for DEP in product-service-w10 order-service-w10 customer-service-w10 frontend; do
            CONT=$(kubectl get deployment $DEP -o jsonpath='{.spec.template.spec.containers[0].name}')
            kubectl set image deployment/$DEP $CONT=${{ env.ACR_LOGIN_SERVER }}/$DEP:latest || echo "Deployment $DEP may not exist yet"
          done

      - name: Get external IPs of services
        run: kubectl get svc

      - name: Get pod health (Testing)
        run: kubectl get svc

      - name: Logout from Azure
        if: always()
        run: az logout
